import os
import requests
import sys
import time
from colorama import Fore, Style, init  # Import colorama ƒë·ªÉ t·∫°o m√†u s·∫Øc
from constants import *
# Kh·ªüi t·∫°o colorama ƒë·ªÉ h·ªó tr·ª£ m√†u tr√™n Windows
init(autoreset=True)

class TDS_Account:
    def __init__(self, access_token):
        self.TDS_token = access_token
        self.user = None
        self.xu = None
        self.xudie = None

    def ShowInfo(self):
        url = f"https://traodoisub.com/api/?fields=profile&access_token={self.TDS_token}"

        # Hi·ªÉn th·ªã th√¥ng b√°o ƒëang t·∫£i v·ªõi hi·ªáu ·ª©ng
        print(f"{Fore.BLUE}[‚Ñπ] ƒêang l·∫•y th√¥ng tin t√†i kho·∫£n...", end="", flush=True)
        time.sleep(1)  # Gi·∫£ l·∫≠p ƒë·ªô tr·ªÖ cho hi·ªáu ·ª©ng
        
        response = requests.get(url)

        if "error" not in response.json():
            data = response.json()
            if data.get("success") == 200:
                self.user = data["data"].get("user")
                self.xu = data["data"].get("xu")
                self.xudie = data["data"].get("xudie")

                # Ghi ƒë√® d√≤ng tr∆∞·ªõc ƒë√≥
                sys.stdout.write(f"\r{Fore.GREEN}[‚úî] SUCCESS! T√†i kho·∫£n ƒë√£ x√°c th·ª±c.  \n")
                sys.stdout.flush()

                print(f"{Fore.YELLOW}üë§ User: {Fore.CYAN}{self.user} | üí∞ Xu: {Fore.CYAN}{self.xu} | ‚ùå Xudie: {Fore.CYAN}{self.xudie}")

            else:
                sys.stdout.write(f"\r{Fore.RED}[‚úñ] API response error: {data}  \n")
                sys.stdout.flush()
        else:
            sys.stdout.write(f"\r{Fore.RED}[‚úñ] Failed to fetch data! HTTP Status: {response.status_code}  \n")
            sys.stdout.flush()

    def GetJob_FaceBook(self, job_field, job_type):
        # Ki·ªÉm tra n·∫øu job_type h·ª£p l·ªá
        if job_field not in APP_VALUE_JOB_FIELD_FB:
            print(f"{Fore.RED}[‚ùå] ERROR: Job type '{job_field}' kh√¥ng h·ª£p l·ªá!{Style.RESET_ALL}")
            return None
        elif job_field in {"facebook_reaction", "facebook_reactioncmt"}:
            if job_type not in APP_VALUE_JOB_TYPE_FB:
                print(f"{Fore.RED}[‚ùå] ERROR: Job type '{job_type}' kh√¥ng h·ª£p l·ªá!{Style.RESET_ALL}")
                return None
            else:
                url = f"https://traodoisub.com/api/?fields={job_field}&access_token={self.TDS_token}&type={job_type}"
                print(f"{Fore.BLUE}[üîÑ] ƒêang l·∫•y danh s√°ch {APP_VALUE_JOB_FIELD_FB[job_field]} | {Fore.GREEN} Lo·∫°i {APP_VALUE_JOB_TYPE_FB[job_type]}...", end="", flush=True)
                
        else:
            url = f"https://traodoisub.com/api/?fields={job_field}&access_token={self.TDS_token}"
            print(f"{Fore.BLUE}[üîÑ] ƒêang l·∫•y danh s√°ch {APP_VALUE_JOB_FIELD_FB[job_field]} | {Fore.GREEN} Lo·∫°i T·∫•t c·∫£ ...", end="", flush=True)
        

        # G·ª≠i request l·∫•y job
        response = requests.get(url)

        # Ki·ªÉm tra response
        if "error" not in response.text:
            print(f"\r{Fore.GREEN}[‚úÖ] Th√†nh c√¥ng! Nh·∫≠n job {APP_VALUE_JOB_FIELD_FB[job_field]}{Style.RESET_ALL}")
            return response.json()
        else:
            print(f"\r{Fore.RED}[‚ùå] L·ªói l·∫•y job ({response.status_code}): {response.text}{Style.RESET_ALL}")
            return None

    def Receive_Coin(self, job_type, job_id):
        """
        G·ª≠i y√™u c·∫ßu nh·∫≠n xu sau khi ho√†n th√†nh nhi·ªám v·ª•.
        
        :param job_type: Lo·∫°i nhi·ªám v·ª• (facebook_reaction, facebook_share, ...)
        :param job_id: ID c·ªßa nhi·ªám v·ª• ƒë√£ l√†m xong
        """
        if job_type not in APP_VALUE_JOB_FIELD_FB:
            print(f"{Fore.RED}[‚ùå] L·ªói: Lo·∫°i nhi·ªám v·ª• '{job_type}' kh√¥ng h·ª£p l·ªá!{Style.RESET_ALL}")
            return None

        url = f"https://traodoisub.com/api/coin/?type={job_type}&id={job_id}&access_token={self.TDS_token}"

        print(f"{Fore.BLUE}[üîÑ] ƒêang nh·∫≠n xu t·ª´ nhi·ªám v·ª• {APP_VALUE_JOB_FIELD_FB[job_type]} - ID: {job_id}...", end="", flush=True)
        time.sleep(1)  # Gi·∫£ l·∫≠p ƒë·ªô tr·ªÖ

        response = requests.get(url)

        if "error" not in response.text:
            print(f"\r{Fore.GREEN}[‚úÖ] Nh·∫≠n xu th√†nh c√¥ng t·ª´ {APP_VALUE_JOB_FIELD_FB[job_type]} - ID {job_id}.{Style.RESET_ALL}")
            return response.json()
        else:
            error_message = response.json().get("error", "Kh√¥ng r√µ l·ªói")  # Chuy·ªÉn response th√†nh JSON
            print(f"\r{Fore.RED}[‚ùå] L·ªói nh·∫≠n xu ({response.status_code}): {error_message}{Style.RESET_ALL}")
            return None
    
    
    
    
    
    
    
    
    
    
if __name__ == "__main__":
    pass